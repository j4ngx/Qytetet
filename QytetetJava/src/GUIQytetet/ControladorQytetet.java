/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIQytetet;

import java.util.ArrayList;
import java.util.Enumeration;
import java.util.Hashtable;
import javax.swing.JOptionPane;
import modeloqytetet.Casilla;
import modeloqytetet.Jugador;
import modeloqytetet.MetodoSalirCarcel;
import modeloqytetet.Qytetet;
import modeloqytetet.TipoCasilla;
import modeloqytetet.Calle;

/**
 *
 * @author antonio
 */
public class ControladorQytetet extends javax.swing.JFrame {

    private Qytetet modeloQytetet;
    static Jugador jugador;
    static Casilla casilla;

    /**
     * Creates new form ControladorQytetet
     */
    public ControladorQytetet() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vistaQytetet = new GUIQytetet.VistaQytetet();
        jbJugar = new javax.swing.JButton();
        jbComprar = new javax.swing.JButton();
        jbSalirPagando = new javax.swing.JButton();
        jbAplicarSorpresa = new javax.swing.JButton();
        jbSalirTriando = new javax.swing.JButton();
        jbPasarTurno = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jbJugar.setText("Jugar");
        jbJugar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbJugarActionPerformed(evt);
            }
        });

        jbComprar.setText("Comprar");
        jbComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbComprarActionPerformed(evt);
            }
        });

        jbSalirPagando.setText("Salir de la carcel pagando");
        jbSalirPagando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirPagandoActionPerformed(evt);
            }
        });

        jbAplicarSorpresa.setText("Aplicar Sorpresa");
        jbAplicarSorpresa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAplicarSorpresaActionPerformed(evt);
            }
        });

        jbSalirTriando.setText("Salir de la carcel tirando el dado");
        jbSalirTriando.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirTriandoActionPerformed(evt);
            }
        });

        jbPasarTurno.setText("PasarTurno");
        jbPasarTurno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbPasarTurnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbJugar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbPasarTurno, javax.swing.GroupLayout.DEFAULT_SIZE, 385, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbComprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbAplicarSorpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 396, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbSalirPagando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbSalirTriando, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE))
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vistaQytetet, javax.swing.GroupLayout.PREFERRED_SIZE, 1245, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vistaQytetet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jbJugar, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                    .addComponent(jbSalirPagando, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbComprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jbSalirTriando, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                    .addComponent(jbAplicarSorpresa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbPasarTurno, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirTriandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirTriandoActionPerformed
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.TIRANDODADO);
        this.jbSalirPagando.setEnabled(false);
        this.jbSalirTriando.setEnabled(false);
        if (resultado) {
            JOptionPane.showMessageDialog(this, "Sales de la carcel");
            this.jbJugar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "No sales de la carcel");
            this.jbPasarTurno.setEnabled(true);
        }
        this.vistaQytetet.actualizar(modeloQytetet);
    }//GEN-LAST:event_jbSalirTriandoActionPerformed

    private void jbPasarTurnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbPasarTurnoActionPerformed
        jugador = modeloQytetet.siguienteJugador();

        bloquearTodos();

        if (jugador.getEncarcelado()) {
            jbSalirPagando.setEnabled(true);
            jbSalirTriando.setEnabled(true);
        } else {
            jbJugar.setEnabled(true);
        }
        this.vistaQytetet.actualizar(modeloQytetet);
    }//GEN-LAST:event_jbPasarTurnoActionPerformed

    private void jbSalirPagandoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirPagandoActionPerformed
        boolean resultado = modeloQytetet.intentarSalirCarcel(MetodoSalirCarcel.PAGANDOLIBERTAD);
        this.jbSalirPagando.setEnabled(false);
        this.jbSalirTriando.setEnabled(false);
        if (resultado) {
            JOptionPane.showMessageDialog(this, "Sales de la carcel");
            this.jbJugar.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(this, "No sales de la carcel");
            this.jbPasarTurno.setEnabled(true);
        }
        this.vistaQytetet.actualizar(modeloQytetet);
    }//GEN-LAST:event_jbSalirPagandoActionPerformed


    private void jbJugarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbJugarActionPerformed
        boolean tienePropietario = modeloQytetet.jugar();

        if (!bancarrota()) {
            casilla = jugador.getCasillaActual();
            if (casilla.getTipo() == TipoCasilla.CALLE) {
                jbComprar.setEnabled(true);
            } else if (casilla.getTipo() == TipoCasilla.SORPRESA) {
                jbAplicarSorpresa.setEnabled(true);
            }
            jbPasarTurno.setEnabled(true);
            jbJugar.setEnabled(false);
            actualizar(modeloQytetet);
        } else {
            finDelJuego();
        }


    }//GEN-LAST:event_jbJugarActionPerformed

    private void jbComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbComprarActionPerformed
        int saldoAnterior = jugador.getSaldo();
        boolean puedoComprar = modeloQytetet.comprarTituloPropiedad();
        if (puedoComprar) {
            int coste = saldoAnterior - jugador.getSaldo();
            JOptionPane.showMessageDialog(this, "Compra realizada (Coste: " + coste + " Saldo actual: " + jugador.getSaldo() + ")");

        } else {
            JOptionPane.showMessageDialog(this, "No se puedo realizar la compra");
        }
        jbPasarTurno.setEnabled(true);
        jbComprar.setEnabled(false);
        actualizar(modeloQytetet);
        //actualizar(modeloQytetet);
    }//GEN-LAST:event_jbComprarActionPerformed

    private void jbAplicarSorpresaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAplicarSorpresaActionPerformed
        modeloQytetet.aplicarSorpresa();
        if (!bancarrota()) {
            bloquearTodos();
            jbPasarTurno.setEnabled(true);
            actualizar(modeloQytetet);
        } else {
            finDelJuego();
        }

    }//GEN-LAST:event_jbAplicarSorpresaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ControladorQytetet controladorQytetet = new ControladorQytetet();
        CapturaNombreJugadores capturaNombres = new CapturaNombreJugadores(controladorQytetet, true);
        ArrayList<String> nombres = capturaNombres.obtenerNombres();

        Qytetet juego = Qytetet.getInstance();
        Dado.createInstance(controladorQytetet);

        juego.inicializarJuego(nombres);
        controladorQytetet.bloquearTodos();
        controladorQytetet.jbJugar.setEnabled(true);
        controladorQytetet.actualizar(juego);
        jugador = juego.getJugadorActual();
        casilla = jugador.getCasillaActual();

        //
        controladorQytetet.setVisible(true); //Esta debe ser la última línea de código del main
    }

    private void bloquearTodos() {
        this.jbAplicarSorpresa.setEnabled(false);
        this.jbComprar.setEnabled(false);
        this.jbJugar.setEnabled(false);
        this.jbPasarTurno.setEnabled(false);
        this.jbSalirPagando.setEnabled(false);
        this.jbSalirTriando.setEnabled(false);
    }

    public void actualizar(Qytetet juego) {
        modeloQytetet = juego;
        vistaQytetet.actualizar(juego);
    }

    private void finDelJuego() {
        String mensaje = "Hay un jugador en bancarrota, el juego ha finalizado.\nEl ranking es:\n";
        Hashtable<String, Integer> t = modeloQytetet.obtenerRanking();

        Enumeration<Integer> enumeration = t.elements();
        Enumeration<String> llaves = t.keys();

        int i = 1;
        while (enumeration.hasMoreElements()) {
            mensaje += i + "º: " + llaves.nextElement() + " " + enumeration.nextElement() + "\n";
            i++;
        }
        JOptionPane.showMessageDialog(this, mensaje, "Ranking ", JOptionPane.INFORMATION_MESSAGE);
        bloquearTodos();
    }

    private boolean bancarrota() {
        return jugador.getSaldo() < 0;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbAplicarSorpresa;
    private javax.swing.JButton jbComprar;
    private javax.swing.JButton jbJugar;
    private javax.swing.JButton jbPasarTurno;
    private javax.swing.JButton jbSalirPagando;
    private javax.swing.JButton jbSalirTriando;
    private GUIQytetet.VistaQytetet vistaQytetet;
    // End of variables declaration//GEN-END:variables
}
